# Generated by Django 3.1.2 on 2022-10-19 08:37

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('management', '0008_auto_20221019_0725'),
        ('ecommerce', '0002_product_rating'),
    ]

    operations = [
        migrations.CreateModel(
            name='MainCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/main/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '2.MainCategory',
            },
        ),
        migrations.CreateModel(
            name='MiniCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/mini/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '4.MiniCategory',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=150, verbose_name='Name')),
                ('digital_file', models.FileField(blank=True, help_text='Please use our recommended allowed extension are zip , rar', null=True, upload_to='products/files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip', 'rar'])], verbose_name='Digital File')),
                ('product_description', models.TextField(verbose_name='Short Description')),
                ('product_image', models.ImageField(default='products/product.jpg', max_length=500, upload_to='products/imgs/', verbose_name='Product Image')),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Full Description')),
                ('PRDPrice', models.FloatField(blank=True, null=True, verbose_name='Price')),
                ('PRDDiscountPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount')),
                ('additional_image_1', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_1')),
                ('additional_image_2', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_2')),
                ('additional_image_3', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_3')),
                ('additional_image_4', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_4')),
                ('feedbak_average', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Feedbak average')),
                ('feedbak_number', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Feedbak number')),
                ('width', models.FloatField(blank=True, null=True, verbose_name='Width')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Height')),
                ('PRDWeight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=10, null=True, verbose_name='SET WEIGHT_KG')),
                ('pieces', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='pieces/set')),
                ('available', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='available')),
                ('PRDSKU', models.CharField(blank=True, max_length=100, null=True, verbose_name='SKU')),
                ('PRDISSale', models.BooleanField(default=False, verbose_name='Sale')),
                ('promotional', models.CharField(blank=True, choices=[('New', 'New'), ('Hot', 'Hot')], default='New', max_length=13, null=True)),
                ('PRDISactive', models.BooleanField(blank=True, choices=[(True, True), (False, False)], default=True, max_length=13, null=True)),
                ('PRDISDeleted', models.BooleanField(default=False, verbose_name='Product Deleted')),
                ('PRDtags', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tags')),
                ('PRDSlug', models.SlugField(allow_unicode=True, blank=True, max_length=150, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
                ('product_maincategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.maincategory', verbose_name='Main Category')),
                ('product_minicategor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.minicategory', verbose_name='Mini Category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PRDIImage', models.ImageField(max_length=500, upload_to='products/imgs/product_imgs/', verbose_name='Image')),
                ('PRDIProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce.product', verbose_name='product')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('client_comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Comment')),
                ('active', models.BooleanField(default=True)),
                ('rating_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('rating_update', models.DateTimeField(auto_now=True, null=True)),
                ('PRDIProduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.product', verbose_name='Product')),
                ('client_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Customer', to='management.profile', verbose_name='Client')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to='management.profile', verbose_name='Supplier')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/sub/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
                ('main_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.maincategory')),
            ],
            options={
                'verbose_name_plural': '3.SubCategory',
            },
        ),
        migrations.CreateModel(
            name='SuperCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/super/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '1.SuperCategory',
            },
        ),
        migrations.RemoveField(
            model_name='product_rating',
            name='clint_name',
        ),
        migrations.RemoveField(
            model_name='product_rating',
            name='related_product',
        ),
        migrations.RemoveField(
            model_name='product_rating',
            name='vendor',
        ),
        migrations.DeleteModel(
            name='Add_Product',
        ),
        migrations.DeleteModel(
            name='Product_catagory',
        ),
        migrations.DeleteModel(
            name='Product_rating',
        ),
        migrations.AddField(
            model_name='product',
            name='product_subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.subcategory', verbose_name='Sub Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_supercategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.supercategory', verbose_name='Super Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='management.profile', verbose_name='Product Vendor'),
        ),
        migrations.AddField(
            model_name='minicategory',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.subcategory'),
        ),
        migrations.AddField(
            model_name='maincategory',
            name='super_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.supercategory'),
        ),
    ]
